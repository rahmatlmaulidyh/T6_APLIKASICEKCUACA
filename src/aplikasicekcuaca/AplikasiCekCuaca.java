/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package aplikasicekcuaca;

import javax.swing.*;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import org.json.JSONObject;
import javax.swing.table.DefaultTableModel;
import java.io.BufferedReader;
import java.io.FileReader;
import java.awt.Image;


public class AplikasiCekCuaca extends javax.swing.JFrame {

     private final String apiKey = "a9d135492b9a3fb2a2415e459b3c5ed9";
     
    public AplikasiCekCuaca() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lokasiField = new javax.swing.JTextField();
        cekCuacaButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lokasiFavoritBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        riwayatCuacaTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        simpanButton = new javax.swing.JButton();
        muatButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        hasilCuacaLabel = new javax.swing.JLabel();
        Icon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("APLIKASI CEK CUACA");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 18, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Masukkan Lokasi:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 45);
        jPanel1.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 23, 0, 100);
        jPanel1.add(lokasiField, gridBagConstraints);

        cekCuacaButton.setText("Cek Cuaca");
        cekCuacaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cekCuacaButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(14, 25, 14, 0);
        jPanel1.add(cekCuacaButton, gridBagConstraints);

        jLabel3.setText("Lokasi Favorit");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 63);
        jPanel1.add(jLabel3, gridBagConstraints);

        lokasiFavoritBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lokasiFavoritBoxItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 26, 0, 101);
        jPanel1.add(lokasiFavoritBox, gridBagConstraints);

        riwayatCuacaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tanggal/Waktu", "Lokasi", "Kondisi", "Suhu"
            }
        ));
        riwayatCuacaTable.setCellSelectionEnabled(true);
        jScrollPane2.setViewportView(riwayatCuacaTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        jPanel1.add(jScrollPane2, gridBagConstraints);

        simpanButton.setText("Simpan");
        simpanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanButtonActionPerformed(evt);
            }
        });
        jPanel2.add(simpanButton);

        muatButton.setText("Muat");
        muatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                muatButtonActionPerformed(evt);
            }
        });
        jPanel2.add(muatButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel1.add(jPanel2, gridBagConstraints);

        hasilCuacaLabel.setText("Hasil Cuaca");
        jPanel3.add(hasilCuacaLabel);
        jPanel3.add(Icon);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(1, 25, 1, 26);
        jPanel1.add(jPanel3, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

      // Fungsi untuk mengambil data cuaca menggunakan API OpenWeatherMap
    private void cekCuaca(String lokasi) {
        try {
            String apiEndpoint = "https://api.openweathermap.org/data/2.5/weather?q=" + lokasi + "&appid=" + apiKey + "&units=metric";
            HttpClient client = HttpClient.newHttpClient();
            HttpRequest request = HttpRequest.newBuilder()
                    .uri(URI.create(apiEndpoint))
                    .build();

            client.sendAsync(request, HttpResponse.BodyHandlers.ofString())
                    .thenApply(HttpResponse::body)
                    .thenAccept(this::tampilkanCuaca)
                    .join();

            // Tambahkan lokasi ke daftar favorit
            if (lokasiFavoritBox.getItemCount() == 0 || !isFavoritExists(lokasi)) {
                lokasiFavoritBox.addItem(lokasi);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Gagal mengambil data cuaca.");
        }
    }

    
    // Misalnya, gambar disimpan di dalam folder "images" dalam proyek
private void tampilkanGambarCuaca(String iconCode) {
    try {
        // URL ikon cuaca dari OpenWeatherMap
        String iconUrl = "https://openweathermap.org/img/wn/" + iconCode + "@2x.png";
        ImageIcon cuacaIcon = new ImageIcon(new java.net.URL(iconUrl));

        
         // Memperbesar atau memperkecil ukuran gambar menjadi 30x30
        Image image = cuacaIcon.getImage(); // Ambil objek gambar dari ImageIcon
        Image resizedImage = image.getScaledInstance(30, 30, Image.SCALE_SMOOTH); // Atur ukuran 
        ImageIcon resizedIcon = new ImageIcon(resizedImage);
        
         // Menampilkan ikon pada JLabel bernama 'Icon'
        Icon.setIcon(resizedIcon);
        Icon.setText(""); // Hapus teks jika ada
    } catch (Exception e) {
        e.printStackTrace();
        Icon.setIcon(null); // Hapus ikon jika terjadi error
        Icon.setText("Gagal memuat ikon"); // Tampilkan teks jika gambar gagal dimuat
    }
}


    // Fungsi untuk menampilkan hasil cuaca di JLabel
   private void tampilkanCuaca(String responseBody) {
    JSONObject json = new JSONObject(responseBody);
    if (json.has("weather") && json.has("main")) {
        String kondisi = json.getJSONArray("weather").getJSONObject(0).getString("description");
        String iconCode = json.getJSONArray("weather").getJSONObject(0).getString("icon"); // Ambil kode ikon
        double suhu = json.getJSONObject("main").getDouble("temp");
        String lokasi = lokasiField.getText(); // Ambil lokasi dari input field
        String waktu = java.time.LocalDateTime.now().toString(); // Waktu saat data diambil

        // Tampilkan hasil di JLabel
        String hasil = "Kondisi: " + kondisi + ", Suhu: " + suhu + "Â°C";
        hasilCuacaLabel.setText(hasil);
        // Menampilkan ikon cuaca
        tampilkanGambarCuaca(iconCode);

        // Tambahkan data ke JTable
        DefaultTableModel model = (DefaultTableModel) riwayatCuacaTable.getModel();
        model.addRow(new Object[]{waktu, lokasi, kondisi, suhu});
    } else {
        JOptionPane.showMessageDialog(this, "Data cuaca tidak valid.");
    }
}



    // Helper function untuk cek apakah lokasi sudah ada di favorit
    private boolean isFavoritExists(String lokasi) {
        for (int i = 0; i < lokasiFavoritBox.getItemCount(); i++) {
            if (lokasiFavoritBox.getItemAt(i).equals(lokasi)) {
                return true;
            }
        }
        return false;
    }
    
    private void cekCuacaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cekCuacaButtonActionPerformed
     String lokasi = lokasiField.getText();
    if (!lokasi.isEmpty()) {
        cekCuaca(lokasi);
    } else {
        JOptionPane.showMessageDialog(null, "Masukkan nama lokasi terlebih dahulu!");
    }
    }//GEN-LAST:event_cekCuacaButtonActionPerformed

    private void lokasiFavoritBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lokasiFavoritBoxItemStateChanged
      if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
        String lokasi = (String) lokasiFavoritBox.getSelectedItem();
        if (lokasi != null && !lokasi.isEmpty()) {
            cekCuaca(lokasi);
        }
    }
    }//GEN-LAST:event_lokasiFavoritBoxItemStateChanged

    private void simpanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanButtonActionPerformed
      try (FileWriter writer = new FileWriter("data_cuaca.csv")) {
        // Loop untuk setiap baris dalam JTable
        for (int i = 0; i < riwayatCuacaTable.getRowCount(); i++) {
            for (int j = 0; j < riwayatCuacaTable.getColumnCount(); j++) {
                writer.write(riwayatCuacaTable.getValueAt(i, j).toString());
                
                // Menambahkan koma sebagai pemisah kecuali di akhir kolom
                if (j < riwayatCuacaTable.getColumnCount() - 1) {
                    writer.write(",");
                }
            }
            writer.write("\n"); // Pindah ke baris berikutnya setelah selesai dengan satu baris
        }
        JOptionPane.showMessageDialog(this, "Data berhasil disimpan ke CSV.");
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal menyimpan data ke CSV.");
    }
    }//GEN-LAST:event_simpanButtonActionPerformed

    private void muatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_muatButtonActionPerformed
     DefaultTableModel model = (DefaultTableModel) riwayatCuacaTable.getModel();
    model.setRowCount(0); // Kosongkan tabel sebelum memuat data baru
    
    try (BufferedReader br = new BufferedReader(new FileReader("data_cuaca.csv"))) {
        String line;
        
        // Membaca setiap baris dari CSV
        while ((line = br.readLine()) != null) {
            // Memisahkan data berdasarkan koma
            String[] data = line.split(",");
            // Menambahkan baris ke model tabel
            model.addRow(data);
        }
        
        JOptionPane.showMessageDialog(this, "Data berhasil dimuat dari CSV.");
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal memuat data dari CSV.");
    }
    }//GEN-LAST:event_muatButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AplikasiCekCuaca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AplikasiCekCuaca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AplikasiCekCuaca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AplikasiCekCuaca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AplikasiCekCuaca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Icon;
    private javax.swing.JButton cekCuacaButton;
    private javax.swing.JLabel hasilCuacaLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> lokasiFavoritBox;
    private javax.swing.JTextField lokasiField;
    private javax.swing.JButton muatButton;
    private javax.swing.JTable riwayatCuacaTable;
    private javax.swing.JButton simpanButton;
    // End of variables declaration//GEN-END:variables
}
